"use strict";(self.webpackChunkrn_tosty_docs=self.webpackChunkrn_tosty_docs||[]).push([[119],{8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>a});var t=s(6540);const o={},i=t.createContext(o);function r(e){const n=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),t.createElement(i.Provider,{value:n},e.children)}},8678:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"core-concepts/toast-methods","title":"Toast Methods \ud83d\udee0\ufe0f","description":"The heart of RN-Tosty lies in its simple, powerful API. This guide covers all the methods you\'ll use to create beautiful toast notifications.","source":"@site/docs/core-concepts/toast-methods.md","sourceDirName":"core-concepts","slug":"/core-concepts/toast-methods","permalink":"/rn-tosty/docs/core-concepts/toast-methods","draft":false,"unlisted":false,"editUrl":"https://github.com/codestz/rn-tosty/tree/main/docs/docs/core-concepts/toast-methods.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Migration Guide \ud83d\udd04","permalink":"/rn-tosty/docs/guides/migration-guide"},"next":{"title":"Basic Configuration \ud83d\udd27","permalink":"/rn-tosty/docs/core-concepts/basic-configuration"}}');var o=s(4848),i=s(8453);const r={},a="Toast Methods \ud83d\udee0\ufe0f",c={},l=[{value:"\ud83d\ude80 The Main Methods",id:"-the-main-methods",level:2},{value:"<code>toast.success(message, config?)</code>",id:"toastsuccessmessage-config",level:3},{value:"<code>toast.error(message, config?)</code>",id:"toasterrormessage-config",level:3},{value:"<code>toast.warning(message, config?)</code>",id:"toastwarningmessage-config",level:3},{value:"<code>toast.info(message, config?)</code>",id:"toastinfomessage-config",level:3},{value:"<code>toast.custom(config)</code>",id:"toastcustomconfig",level:3},{value:"\u26a1 Promise Integration",id:"-promise-integration",level:2},{value:"<code>toast.promise(promise, messages, config?)</code>",id:"toastpromisepromise-messages-config",level:3},{value:"Advanced Promise Configuration",id:"advanced-promise-configuration",level:4},{value:"\ud83c\udf9b\ufe0f Utility Methods",id:"\ufe0f-utility-methods",level:2},{value:"<code>toast.dismiss(id?)</code>",id:"toastdismissid",level:3},{value:"<code>toast.getQueueStats()</code>",id:"toastgetqueuestats",level:3},{value:"\ud83d\udd27 Configuration Options",id:"-configuration-options",level:2},{value:"Basic Configuration",id:"basic-configuration",level:3},{value:"Advanced Configuration Examples",id:"advanced-configuration-examples",level:3},{value:"\ud83c\udfa8 Custom Icons",id:"-custom-icons",level:2},{value:"\ud83d\udd04 Hook Alternative: <code>useTosty</code>",id:"-hook-alternative-usetosty",level:2},{value:"\ud83c\udfaf Best Practices",id:"-best-practices",level:2},{value:"Message Writing",id:"message-writing",level:3},{value:"Duration Guidelines",id:"duration-guidelines",level:3},{value:"Priority Usage",id:"priority-usage",level:3},{value:"\ud83d\ude80 Next Steps",id:"-next-steps",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"toast-methods-\ufe0f",children:"Toast Methods \ud83d\udee0\ufe0f"})}),"\n",(0,o.jsx)(n.p,{children:"The heart of RN-Tosty lies in its simple, powerful API. This guide covers all the methods you'll use to create beautiful toast notifications."}),"\n",(0,o.jsx)(n.h2,{id:"-the-main-methods",children:"\ud83d\ude80 The Main Methods"}),"\n",(0,o.jsx)(n.p,{children:"These five methods handle 99% of your toast needs:"}),"\n",(0,o.jsx)(n.h3,{id:"toastsuccessmessage-config",children:(0,o.jsx)(n.code,{children:"toast.success(message, config?)"})}),"\n",(0,o.jsx)(n.p,{children:"Shows a success toast with positive feedback styling."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"import { toast } from 'rn-tosty';\n\n// Basic success\ntoast.success('Profile updated successfully!');\n\n// With configuration\ntoast.success('Data saved!', {\n  duration: 3000,\n  position: 'bottom',\n  priority: 'high',\n});\n\n// With dynamic content\nconst user = { name: 'Alex', points: 1250 };\ntoast.success(`Welcome back, ${user.name}! You have ${user.points} points.`);\n"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Returns:"})," ",(0,o.jsx)(n.code,{children:"string"})," - Unique toast ID for dismissal"]}),"\n",(0,o.jsx)(n.h3,{id:"toasterrormessage-config",children:(0,o.jsx)(n.code,{children:"toast.error(message, config?)"})}),"\n",(0,o.jsx)(n.p,{children:"Shows an error toast for problems and failures."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"// Basic error\ntoast.error('Something went wrong!');\n\n// Validation error\ntoast.error('Email address is required');\n\n// Network error with longer duration\ntoast.error(\n  'Failed to connect to server. Please check your internet connection.',\n  {\n    duration: 6000,\n  }\n);\n\n// Critical error that stays until dismissed\ntoast.error('Payment failed: Please try a different card', {\n  duration: 0, // Stays until user taps to dismiss\n});\n"})}),"\n",(0,o.jsx)(n.h3,{id:"toastwarningmessage-config",children:(0,o.jsx)(n.code,{children:"toast.warning(message, config?)"})}),"\n",(0,o.jsx)(n.p,{children:"Shows a warning toast for important information."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"// Basic warning\ntoast.warning('Your session will expire in 5 minutes');\n\n// Storage warning\ntoast.warning('Storage almost full: 95% used', {\n  priority: 'high',\n  duration: 7000,\n});\n\n// Update notification\ntoast.warning('New version available - restart to update');\n"})}),"\n",(0,o.jsx)(n.h3,{id:"toastinfomessage-config",children:(0,o.jsx)(n.code,{children:"toast.info(message, config?)"})}),"\n",(0,o.jsx)(n.p,{children:"Shows an info toast for general information and updates."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"// Basic info\ntoast.info('Sync completed successfully');\n\n// Feature announcement\ntoast.info('\ud83c\udf89 New dark mode available in settings!');\n\n// Progress update\ntoast.info('Upload progress: 75% complete');\n\n// Positioned at bottom\ntoast.info('Swipe left for more options', {\n  position: 'bottom',\n});\n"})}),"\n",(0,o.jsx)(n.h3,{id:"toastcustomconfig",children:(0,o.jsx)(n.code,{children:"toast.custom(config)"})}),"\n",(0,o.jsx)(n.p,{children:"Shows a fully customizable toast with complete control."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"// Custom toast with all options\ntoast.custom({\n  message: 'Custom notification!',\n  type: 'success', // or 'error', 'warning', 'info'\n  duration: 5000,\n  position: 'top',\n  variant: 'my-custom-variant',\n  icon: MyCustomIcon,\n  layout: {\n    iconPosition: 'right',\n    textAlignment: 'center',\n  },\n  progressBar: {\n    enabled: true,\n    color: '#FF6B6B',\n  },\n});\n"})}),"\n",(0,o.jsx)(n.h2,{id:"-promise-integration",children:"\u26a1 Promise Integration"}),"\n",(0,o.jsx)(n.p,{children:"The most powerful feature for handling async operations:"}),"\n",(0,o.jsx)(n.h3,{id:"toastpromisepromise-messages-config",children:(0,o.jsx)(n.code,{children:"toast.promise(promise, messages, config?)"})}),"\n",(0,o.jsx)(n.p,{children:"Automatically manages loading, success, and error states."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"// Basic promise handling\nconst saveProfile = async () => {\n  const response = await api.updateProfile(userData);\n  return response.data;\n};\n\ntoast.promise(saveProfile(), {\n  loading: 'Saving your profile...',\n  success: 'Profile updated successfully!',\n  error: 'Failed to save profile',\n});\n"})}),"\n",(0,o.jsx)(n.h4,{id:"advanced-promise-configuration",children:"Advanced Promise Configuration"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"// With dynamic messages\ntoast.promise(\n  uploadFile(file),\n  {\n    loading: {\n      message: `Uploading ${file.name}...`,\n      icon: { type: 'bars', size: 'large' },\n    },\n    success: (result) => `${result.fileName} uploaded successfully!`,\n    error: (error) => `Upload failed: ${error.message}`,\n  },\n  {\n    position: 'bottom',\n    layout: { iconPosition: 'right' },\n  }\n);\n\n// Multiple operations\nconst syncData = async () => {\n  const [users, posts, comments] = await Promise.all([\n    api.getUsers(),\n    api.getPosts(),\n    api.getComments(),\n  ]);\n  return {\n    users: users.length,\n    posts: posts.length,\n    comments: comments.length,\n  };\n};\n\ntoast.promise(syncData(), {\n  loading: 'Syncing data...',\n  success: (data) =>\n    `Synced ${data.users} users, ${data.posts} posts, ${data.comments} comments`,\n  error: 'Sync failed - please try again',\n});\n"})}),"\n",(0,o.jsx)(n.h2,{id:"\ufe0f-utility-methods",children:"\ud83c\udf9b\ufe0f Utility Methods"}),"\n",(0,o.jsx)(n.h3,{id:"toastdismissid",children:(0,o.jsx)(n.code,{children:"toast.dismiss(id?)"})}),"\n",(0,o.jsx)(n.p,{children:"Dismiss specific or all toasts."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"// Dismiss specific toast\nconst toastId = toast.success('This will be dismissed');\nsetTimeout(() => toast.dismiss(toastId), 2000);\n\n// Dismiss all toasts\ntoast.dismiss();\n\n// Common pattern: dismiss all before showing new\nconst showCriticalError = () => {\n  toast.dismiss(); // Clear all existing toasts\n  toast.error('Critical error occurred!', { priority: 'urgent' });\n};\n"})}),"\n",(0,o.jsx)(n.h3,{id:"toastgetqueuestats",children:(0,o.jsx)(n.code,{children:"toast.getQueueStats()"})}),"\n",(0,o.jsx)(n.p,{children:"Get information about the current toast queue."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"const stats = toast.getQueueStats();\nconsole.log(stats);\n// {\n//   visible: 2,    // Currently visible toasts\n//   queued: 3,     // Waiting in queue\n//   total: 5       // Total managed toasts\n// }\n\n// Use for debugging or UI feedback\nconst showQueueInfo = () => {\n  const { visible, queued } = toast.getQueueStats();\n  if (queued > 0) {\n    toast.info(`${visible} visible, ${queued} queued`);\n  }\n};\n"})}),"\n",(0,o.jsx)(n.h2,{id:"-configuration-options",children:"\ud83d\udd27 Configuration Options"}),"\n",(0,o.jsx)(n.p,{children:"All methods accept an optional configuration object:"}),"\n",(0,o.jsx)(n.h3,{id:"basic-configuration",children:"Basic Configuration"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"interface ToastConfig {\n  // Timing\n  duration?: number; // Duration in ms (0 = permanent)\n\n  // Positioning\n  position?: 'top' | 'bottom'; // Where to show the toast\n\n  // Priority (affects queue order)\n  priority?: 'low' | 'medium' | 'high' | 'urgent';\n\n  // Styling\n  variant?: string; // Custom variant name\n\n  // Layout\n  layout?: {\n    iconPosition?: 'left' | 'right';\n    textAlignment?: 'left' | 'center' | 'right';\n    spacing?: 'compact' | 'default' | 'spacious';\n  };\n\n  // Progress bar\n  progressBar?: {\n    enabled?: boolean;\n    position?: 'top' | 'bottom';\n    color?: string;\n    height?: number;\n  };\n\n  // Custom icon\n  icon?: React.ComponentType<IconProps>;\n}\n"})}),"\n",(0,o.jsx)(n.h3,{id:"advanced-configuration-examples",children:"Advanced Configuration Examples"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"// High priority error with custom styling\ntoast.error('Critical system error', {\n  priority: 'urgent',\n  duration: 0, // Permanent until dismissed\n  layout: {\n    iconPosition: 'left',\n    textAlignment: 'center',\n    spacing: 'spacious',\n  },\n  progressBar: {\n    enabled: false, // No progress bar for permanent toasts\n  },\n});\n\n// Custom success with right-aligned icon\ntoast.success('Task completed successfully!', {\n  duration: 4000,\n  position: 'bottom',\n  layout: {\n    iconPosition: 'right',\n    textAlignment: 'left',\n    spacing: 'default',\n  },\n  progressBar: {\n    enabled: true,\n    position: 'top',\n    color: '#10B981',\n    height: 3,\n  },\n});\n"})}),"\n",(0,o.jsx)(n.h2,{id:"-custom-icons",children:"\ud83c\udfa8 Custom Icons"}),"\n",(0,o.jsx)(n.p,{children:"Add personality with custom icons:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"import { CustomIconComponent } from 'rn-tosty';\n\n// Create custom icon component\nconst HeartIcon: CustomIconComponent = ({ size, color, theme }) => (\n  <View\n    style={{\n      width: size,\n      height: size,\n      justifyContent: 'center',\n      alignItems: 'center',\n    }}\n  >\n    <Text style={{ color, fontSize: size * 0.8 }}>\u2665</Text>\n  </View>\n);\n\n// Use in toast\ntoast.success('You earned a heart!', {\n  icon: HeartIcon,\n  duration: 3000,\n  layout: { iconPosition: 'right' },\n});\n\n// Vector icons (with react-native-vector-icons)\nimport Icon from 'react-native-vector-icons/MaterialIcons';\n\nconst CustomVectorIcon: CustomIconComponent = ({ size, color }) => (\n  <Icon name=\"favorite\" size={size} color={color} />\n);\n\ntoast.success('Added to favorites!', { icon: CustomVectorIcon });\n"})}),"\n",(0,o.jsxs)(n.h2,{id:"-hook-alternative-usetosty",children:["\ud83d\udd04 Hook Alternative: ",(0,o.jsx)(n.code,{children:"useTosty"})]}),"\n",(0,o.jsx)(n.p,{children:"For component-based usage:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"import { useTosty } from 'rn-tosty';\n\nfunction MyComponent() {\n  const {\n    success,\n    error,\n    warning,\n    info,\n    custom,\n    promise,\n    dismiss,\n    getQueueStats,\n  } = useTosty();\n\n  const handleSave = async () => {\n    try {\n      const result = await promise(saveData(), {\n        loading: 'Saving...',\n        success: 'Saved successfully!',\n        error: 'Save failed',\n      });\n\n      // Use the result\n      console.log('Save result:', result);\n    } catch (error) {\n      console.error('Save error:', error);\n    }\n  };\n\n  return (\n    <View>\n      <Button title=\"Success\" onPress={() => success('Great job!')} />\n      <Button title=\"Error\" onPress={() => error('Oops!')} />\n      <Button title=\"Save Data\" onPress={handleSave} />\n      <Button title=\"Clear All\" onPress={() => dismiss()} />\n    </View>\n  );\n}\n"})}),"\n",(0,o.jsx)(n.h2,{id:"-best-practices",children:"\ud83c\udfaf Best Practices"}),"\n",(0,o.jsx)(n.h3,{id:"message-writing",children:"Message Writing"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"// \u274c Too generic\ntoast.success('Success');\n\n// \u2705 Specific and helpful\ntoast.success('Profile photo updated successfully!');\n\n// \u274c Technical jargon\ntoast.error('HTTP 500 Internal Server Error');\n\n// \u2705 User-friendly\ntoast.error('Something went wrong on our end. Please try again.');\n"})}),"\n",(0,o.jsx)(n.h3,{id:"duration-guidelines",children:"Duration Guidelines"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"// Quick confirmations\ntoast.success('Copied!', { duration: 2000 });\n\n// Standard messages (default: 4000ms)\ntoast.info('Sync completed');\n\n// Important information\ntoast.warning('Session expires in 5 minutes', { duration: 6000 });\n\n// Critical errors (let users read)\ntoast.error('Payment failed: Card was declined', { duration: 7000 });\n\n// Requires action\ntoast.error('Network error - check connection', { duration: 0 });\n"})}),"\n",(0,o.jsx)(n.h3,{id:"priority-usage",children:"Priority Usage"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"// Low priority - background tasks, tips\ntoast.info('Pro tip: Use keyboard shortcuts', { priority: 'low' });\n\n// Medium priority - standard notifications (default)\ntoast.success('Message sent');\n\n// High priority - important but not urgent\ntoast.warning('Low battery: 20%', { priority: 'high' });\n\n// Urgent - critical, needs immediate attention\ntoast.error('Payment failed!', { priority: 'urgent' });\n"})}),"\n",(0,o.jsx)(n.h2,{id:"-next-steps",children:"\ud83d\ude80 Next Steps"}),"\n",(0,o.jsx)(n.p,{children:"Now that you know all the toast methods, explore these advanced topics:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.a,{href:"./basic-configuration",children:"Basic Configuration \u2192"})})," - Fine-tune behavior"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.a,{href:"../advanced/promise-integration",children:"Promise Integration \u2192"})})," - Deep dive into async handling"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.a,{href:"../variants/creating-custom-variants",children:"Custom Variants \u2192"})})," - Create your own toast styles"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:(0,o.jsx)(n.a,{href:"../advanced/queue-management",children:"Queue Management \u2192"})})," - Control multiple toasts"]}),"\n"]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"\ud83c\udf8a You're now a toast expert!"})," These methods give you everything you need to create beautiful, effective notifications in your React Native app."]})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}}}]);