"use strict";(self.webpackChunkrn_tosty_docs=self.webpackChunkrn_tosty_docs||[]).push([[672],{6416:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"guides/migration-guide","title":"Migration Guide \ud83d\udd04","description":"Moving to RN-Tosty from another toast library? This guide covers the most common migration scenarios and helps you transition smoothly while taking advantage of RN-Tosty\'s advanced features.","source":"@site/docs/guides/migration-guide.md","sourceDirName":"guides","slug":"/guides/migration-guide","permalink":"/rn-tosty/docs/guides/migration-guide","draft":false,"unlisted":false,"editUrl":"https://github.com/codestz/rn-tosty/tree/main/docs/docs/guides/migration-guide.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"First Steps \ud83d\ude80","permalink":"/rn-tosty/docs/guides/first-steps"},"next":{"title":"Toast Methods \ud83d\udee0\ufe0f","permalink":"/rn-tosty/docs/core-concepts/toast-methods"}}');var i=s(4848),o=s(8453);const a={},r="Migration Guide \ud83d\udd04",l={},c=[{value:"\ud83c\udfaf Quick Migration Path",id:"-quick-migration-path",level:2},{value:"\ud83d\udcda Supported Migration Sources",id:"-supported-migration-sources",level:2},{value:"\ud83d\udd0d Identify Your Current Setup",id:"-identify-your-current-setup",level:2},{value:"\ud83d\udee0\ufe0f Installation",id:"\ufe0f-installation",level:2},{value:"Provider Migration",id:"provider-migration",level:2},{value:"Before (react-native-toast-message)",id:"before-react-native-toast-message",level:3},{value:"After (RN-Tosty)",id:"after-rn-tosty",level:3},{value:"API Migration",id:"api-migration",level:2},{value:"Basic Toast Calls",id:"basic-toast-calls",level:3},{value:"Advanced Options",id:"advanced-options",level:3},{value:"Custom Toast Types",id:"custom-toast-types",level:3},{value:"API Migration",id:"api-migration-1",level:2},{value:"Basic Usage",id:"basic-usage",level:3},{value:"Duration Constants",id:"duration-constants",level:3},{value:"Provider Migration",id:"provider-migration-1",level:2},{value:"Before (react-native-flash-message)",id:"before-react-native-flash-message",level:3},{value:"After (RN-Tosty)",id:"after-rn-tosty-1",level:3},{value:"API Migration",id:"api-migration-2",level:2},{value:"Basic Messages",id:"basic-messages",level:3},{value:"Advanced Configuration",id:"advanced-configuration",level:3},{value:"API Migration",id:"api-migration-3",level:2},{value:"Basic Usage",id:"basic-usage-1",level:3},{value:"Duration Constants",id:"duration-constants-1",level:3},{value:"Position Constants",id:"position-constants",level:3},{value:"Provider Migration",id:"provider-migration-2",level:2},{value:"Before (react-native-toast-notifications)",id:"before-react-native-toast-notifications",level:3},{value:"After (RN-Tosty)",id:"after-rn-tosty-2",level:3},{value:"API Migration",id:"api-migration-4",level:2},{value:"Hook Usage",id:"hook-usage",level:3},{value:"Custom Components",id:"custom-components",level:3},{value:"Global Configuration",id:"global-configuration",level:2},{value:"Most Libraries \u2192 RN-Tosty",id:"most-libraries--rn-tosty",level:3},{value:"Theme Configuration",id:"theme-configuration",level:2},{value:"Migrating Custom Styles",id:"migrating-custom-styles",level:3},{value:"Animation Migration",id:"animation-migration",level:2},{value:"Step-by-Step Verification",id:"step-by-step-verification",level:2},{value:"1. Side-by-Side Testing",id:"1-side-by-side-testing",level:3},{value:"2. Automated Migration Testing",id:"2-automated-migration-testing",level:3},{value:"3. Regression Checklist",id:"3-regression-checklist",level:3},{value:"4. Performance Verification",id:"4-performance-verification",level:3},{value:"Remove Old Dependencies",id:"remove-old-dependencies",level:2},{value:"Code Cleanup",id:"code-cleanup",level:2},{value:"Remove Old Imports",id:"remove-old-imports",level:3},{value:"Clean Up Old Configuration",id:"clean-up-old-configuration",level:3},{value:"Take Advantage of New Features",id:"take-advantage-of-new-features",level:2},{value:"1. Advanced Queue Management",id:"1-advanced-queue-management",level:3},{value:"2. Smart Theming",id:"2-smart-theming",level:3},{value:"3. Enhanced Accessibility",id:"3-enhanced-accessibility",level:3},{value:"4. Progress Bars",id:"4-progress-bars",level:3},{value:"5. Promise Integration",id:"5-promise-integration",level:3},{value:"Common Migration Issues",id:"common-migration-issues",level:2},{value:"Issue: Toasts Not Showing",id:"issue-toasts-not-showing",level:3},{value:"Issue: Styling Looks Different",id:"issue-styling-looks-different",level:3},{value:"Issue: Performance Problems",id:"issue-performance-problems",level:3},{value:"Issue: Accessibility Regression",id:"issue-accessibility-regression",level:3},{value:"Getting Help",id:"getting-help",level:2},{value:"Pre-Migration",id:"pre-migration",level:2},{value:"Migration",id:"migration",level:2},{value:"Post-Migration",id:"post-migration",level:2},{value:"Enhancements (Optional)",id:"enhancements-optional",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",input:"input",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"migration-guide-",children:"Migration Guide \ud83d\udd04"})}),"\n",(0,i.jsx)(n.p,{children:"Moving to RN-Tosty from another toast library? This guide covers the most common migration scenarios and helps you transition smoothly while taking advantage of RN-Tosty's advanced features."}),"\n",(0,i.jsx)(n.h2,{id:"-quick-migration-path",children:"\ud83c\udfaf Quick Migration Path"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"#identify-your-current-setup",children:"Identify your current library"})})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"#installation",children:"Install RN-Tosty"})})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"#provider-migration",children:"Replace provider setup"})})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"#toast-api-migration",children:"Update toast calls"})})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"#configuration-migration",children:"Migrate configuration"})})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"#testing--verification",children:"Test & verify"})})}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Estimated time:"})," 15-30 minutes for most projects"]}),"\n",(0,i.jsx)(n.h2,{id:"-supported-migration-sources",children:"\ud83d\udcda Supported Migration Sources"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"From Library"}),(0,i.jsx)(n.th,{children:"Difficulty"}),(0,i.jsx)(n.th,{children:"Time"}),(0,i.jsx)(n.th,{children:"Status"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"react-native-toast-message"})}),(0,i.jsx)(n.td,{children:"Easy"}),(0,i.jsx)(n.td,{children:"~15 min"}),(0,i.jsx)(n.td,{children:"\u2705 Fully Supported"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"react-native-simple-toast"})}),(0,i.jsx)(n.td,{children:"Easy"}),(0,i.jsx)(n.td,{children:"~10 min"}),(0,i.jsx)(n.td,{children:"\u2705 Fully Supported"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"react-native-flash-message"})}),(0,i.jsx)(n.td,{children:"Medium"}),(0,i.jsx)(n.td,{children:"~20 min"}),(0,i.jsx)(n.td,{children:"\u2705 Fully Supported"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"react-native-root-toast"})}),(0,i.jsx)(n.td,{children:"Easy"}),(0,i.jsx)(n.td,{children:"~10 min"}),(0,i.jsx)(n.td,{children:"\u2705 Fully Supported"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"react-native-toast-notifications"})}),(0,i.jsx)(n.td,{children:"Medium"}),(0,i.jsx)(n.td,{children:"~25 min"}),(0,i.jsx)(n.td,{children:"\u2705 Fully Supported"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Custom Toast Solutions"}),(0,i.jsx)(n.td,{children:"Variable"}),(0,i.jsx)(n.td,{children:"~30 min"}),(0,i.jsx)(n.td,{children:"\u26a0\ufe0f Case by Case"})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"-identify-your-current-setup",children:"\ud83d\udd0d Identify Your Current Setup"}),"\n",(0,i.jsx)(n.p,{children:"First, let's identify what you're currently using:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# Check your package.json for current toast library\ngrep -i toast package.json\n\n# Or search your codebase for toast imports\ngrep -r "react-native-toast" src/\ngrep -r "FlashMessage" src/\ngrep -r "Toast." src/\n'})}),"\n",(0,i.jsx)(n.p,{children:"Common indicators:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"react-native-toast-message"}),": ",(0,i.jsx)(n.code,{children:"Toast.show()"}),", ",(0,i.jsx)(n.code,{children:"<Toast />"})," component"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"react-native-simple-toast"}),": ",(0,i.jsx)(n.code,{children:"Toast.show()"})," or ",(0,i.jsx)(n.code,{children:"Toast.showWithGravity()"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"react-native-flash-message"}),": ",(0,i.jsx)(n.code,{children:"<FlashMessage />"}),", ",(0,i.jsx)(n.code,{children:"showMessage()"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"react-native-root-toast"}),": ",(0,i.jsx)(n.code,{children:"Toast.show()"})," with duration constants"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"react-native-toast-notifications"}),": ",(0,i.jsx)(n.code,{children:"<ToastProvider />"}),", ",(0,i.jsx)(n.code,{children:"toast.show()"})]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"\ufe0f-installation",children:"\ud83d\udee0\ufe0f Installation"}),"\n",(0,i.jsx)(n.p,{children:"Install RN-Tosty alongside your current library (we'll remove the old one later):"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Using yarn (recommended)\nyarn add rn-tosty\n\n# Using npm\nnpm install rn-tosty\n\n# Using pnpm\npnpm add rn-tosty\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Note:"})," We'll keep both libraries temporarily to ensure a smooth transition."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h1,{id:"-migration-from-react-native-toast-message",children:"\ud83d\udce6 Migration from react-native-toast-message"}),"\n",(0,i.jsx)(n.h2,{id:"provider-migration",children:"Provider Migration"}),"\n",(0,i.jsx)(n.h3,{id:"before-react-native-toast-message",children:"Before (react-native-toast-message)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"import Toast from 'react-native-toast-message';\n\nexport default function App() {\n  return (\n    <>\n      <YourApp />\n      <Toast />\n    </>\n  );\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"after-rn-tosty",children:"After (RN-Tosty)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"import { ToastProvider } from 'rn-tosty';\n\nexport default function App() {\n  return (\n    <ToastProvider theme=\"default\">\n      <YourApp />\n    </ToastProvider>\n  );\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"api-migration",children:"API Migration"}),"\n",(0,i.jsx)(n.h3,{id:"basic-toast-calls",children:"Basic Toast Calls"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"// Before\nimport Toast from 'react-native-toast-message';\n\nToast.show({\n  type: 'success',\n  text1: 'Success',\n  text2: 'This is a success message',\n});\n\nToast.show({\n  type: 'error',\n  text1: 'Error',\n  text2: 'This is an error message',\n});\n\n// After\nimport { toast } from 'rn-tosty';\n\ntoast.success('Success: This is a success message');\ntoast.error('Error: This is an error message');\n"})}),"\n",(0,i.jsx)(n.h3,{id:"advanced-options",children:"Advanced Options"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"// Before\nToast.show({\n  type: 'info',\n  text1: 'Info',\n  text2: 'Custom message',\n  visibilityTime: 3000,\n  position: 'bottom',\n  topOffset: 30,\n  bottomOffset: 40,\n});\n\n// After\ntoast.info('Info: Custom message', {\n  duration: 3000,\n  position: 'bottom',\n  // Offset handled automatically via theme configuration\n});\n"})}),"\n",(0,i.jsx)(n.h3,{id:"custom-toast-types",children:"Custom Toast Types"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"// Before\nconst toastConfig = {\n  success: (props) => (\n    <BaseToast {...props} style={{ borderLeftColor: 'pink' }} />\n  ),\n  customType: ({ text1, text2, props }) => (\n    <CustomToast text1={text1} text2={text2} {...props} />\n  ),\n};\n\nToast.show({\n  type: 'customType',\n  text1: 'Custom',\n  text2: 'This is custom',\n});\n\n// After\nimport { toast, defineVariant } from 'rn-tosty';\n\n// Define custom variant (one-time setup)\nconst customVariant = defineVariant({\n  style: {\n    backgroundColor: 'pink',\n    borderLeftWidth: 4,\n    borderLeftColor: '#FF1493',\n  },\n  icon: {\n    component: MyCustomIcon,\n    color: '#FF1493',\n  },\n});\n\n// Use custom variant\ntoast.success('Custom: This is custom', {\n  variant: customVariant,\n});\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h1,{id:"-migration-from-react-native-simple-toast",children:"\ud83d\udce6 Migration from react-native-simple-toast"}),"\n",(0,i.jsx)(n.h2,{id:"api-migration-1",children:"API Migration"}),"\n",(0,i.jsx)(n.h3,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"// Before\nimport Toast from 'react-native-simple-toast';\n\nToast.show('This is a simple toast');\nToast.showWithGravity('Toast with gravity', Toast.LONG, Toast.TOP);\nToast.showWithGravityAndOffset(\n  'Toast with offset',\n  Toast.LONG,\n  Toast.BOTTOM,\n  25,\n  50\n);\n\n// After\nimport { toast } from 'rn-tosty';\n\ntoast.info('This is a simple toast');\ntoast.info('Toast with gravity', { duration: 6000, position: 'top' });\ntoast.info('Toast with offset', {\n  duration: 6000,\n  position: 'bottom',\n  // Offset handled by theme configuration\n});\n"})}),"\n",(0,i.jsx)(n.h3,{id:"duration-constants",children:"Duration Constants"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"// Before\nToast.SHORT; // 2000ms\nToast.LONG; // 3500ms\n\n// After\ntoast.info('Short message', { duration: 2000 });\ntoast.info('Long message', { duration: 3500 });\n\n// Or use RN-Tosty's semantic approach\ntoast.success('Quick confirmation'); // Auto-optimized duration\ntoast.info('Detailed information', { duration: 6000 });\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h1,{id:"-migration-from-react-native-flash-message",children:"\ud83d\udce6 Migration from react-native-flash-message"}),"\n",(0,i.jsx)(n.h2,{id:"provider-migration-1",children:"Provider Migration"}),"\n",(0,i.jsx)(n.h3,{id:"before-react-native-flash-message",children:"Before (react-native-flash-message)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"import FlashMessage from 'react-native-flash-message';\n\nexport default function App() {\n  return (\n    <View style={{ flex: 1 }}>\n      <YourApp />\n      <FlashMessage position=\"top\" />\n    </View>\n  );\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"after-rn-tosty-1",children:"After (RN-Tosty)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"import { ToastProvider } from 'rn-tosty';\n\nexport default function App() {\n  return (\n    <ToastProvider theme=\"default\" config={{ defaultPosition: 'top' }}>\n      <YourApp />\n    </ToastProvider>\n  );\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"api-migration-2",children:"API Migration"}),"\n",(0,i.jsx)(n.h3,{id:"basic-messages",children:"Basic Messages"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"// Before\nimport { showMessage } from 'react-native-flash-message';\n\nshowMessage({\n  message: 'Success!',\n  description: 'This is a success message',\n  type: 'success',\n});\n\nshowMessage({\n  message: 'Error!',\n  description: 'This is an error message',\n  type: 'danger',\n});\n\n// After\nimport { toast } from 'rn-tosty';\n\ntoast.success('Success! This is a success message');\ntoast.error('Error! This is an error message');\n"})}),"\n",(0,i.jsx)(n.h3,{id:"advanced-configuration",children:"Advanced Configuration"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"// Before\nshowMessage({\n  message: 'Custom message',\n  description: 'With custom styling',\n  type: 'default',\n  backgroundColor: '#FF6347',\n  color: '#FFFFFF',\n  duration: 3000,\n  position: 'bottom',\n  floating: true,\n  icon: { icon: 'success', position: 'left' },\n});\n\n// After\nimport { toast, defineVariant } from 'rn-tosty';\n\nconst customVariant = defineVariant({\n  style: {\n    backgroundColor: '#FF6347',\n  },\n  text: {\n    color: '#FFFFFF',\n  },\n  icon: {\n    position: 'left',\n    component: SuccessIcon,\n  },\n});\n\ntoast('Custom message: With custom styling', {\n  variant: customVariant,\n  duration: 3000,\n  position: 'bottom',\n});\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h1,{id:"-migration-from-react-native-root-toast",children:"\ud83d\udce6 Migration from react-native-root-toast"}),"\n",(0,i.jsx)(n.h2,{id:"api-migration-3",children:"API Migration"}),"\n",(0,i.jsx)(n.h3,{id:"basic-usage-1",children:"Basic Usage"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"// Before\nimport Toast from 'react-native-root-toast';\n\nlet toast = Toast.show('This is a message', {\n  duration: Toast.durations.LONG,\n  position: Toast.positions.BOTTOM,\n  shadow: true,\n  animation: true,\n  hideOnPress: true,\n  delay: 0,\n});\n\n// Hide toast\nToast.hide(toast);\n\n// After\nimport { toast } from 'rn-tosty';\n\nconst toastId = toast.info('This is a message', {\n  duration: 3500, // LONG duration equivalent\n  position: 'bottom',\n  // shadow, animation, hideOnPress are handled automatically\n});\n\n// Hide toast\ntoast.dismiss(toastId);\n"})}),"\n",(0,i.jsx)(n.h3,{id:"duration-constants-1",children:"Duration Constants"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"// Before\nToast.durations.SHORT; // 2000\nToast.durations.LONG; // 3500\n\n// After\n// Use explicit values or let RN-Tosty optimize\ntoast.info('Short message', { duration: 2000 });\ntoast.info('Long message', { duration: 3500 });\n\n// Or use semantic durations (recommended)\ntoast.success('Quick action'); // Auto-optimized\ntoast.info('Important info', { duration: 5000 });\n"})}),"\n",(0,i.jsx)(n.h3,{id:"position-constants",children:"Position Constants"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"// Before\nToast.positions.TOP; // 20\nToast.positions.BOTTOM; // -20\nToast.positions.CENTER; // 0\n\n// After\ntoast.info('Top message', { position: 'top' });\ntoast.info('Bottom message', { position: 'bottom' });\n// Center position not directly supported - use custom variant if needed\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h1,{id:"-migration-from-react-native-toast-notifications",children:"\ud83d\udce6 Migration from react-native-toast-notifications"}),"\n",(0,i.jsx)(n.h2,{id:"provider-migration-2",children:"Provider Migration"}),"\n",(0,i.jsx)(n.h3,{id:"before-react-native-toast-notifications",children:"Before (react-native-toast-notifications)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"import { ToastProvider } from 'react-native-toast-notifications';\n\nexport default function App() {\n  return (\n    <ToastProvider>\n      <YourApp />\n    </ToastProvider>\n  );\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"after-rn-tosty-2",children:"After (RN-Tosty)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"import { ToastProvider } from 'rn-tosty';\n\nexport default function App() {\n  return (\n    <ToastProvider theme=\"default\">\n      <YourApp />\n    </ToastProvider>\n  );\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"api-migration-4",children:"API Migration"}),"\n",(0,i.jsx)(n.h3,{id:"hook-usage",children:"Hook Usage"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:'// Before\nimport { useToast } from \'react-native-toast-notifications\';\n\nfunction MyComponent() {\n  const toast = useToast();\n\n  const showSuccess = () => {\n    toast.show("Success message", {\n      type: "success",\n      placement: "top",\n      duration: 4000,\n    });\n  };\n\n  // After\n  import { toast } from \'rn-tosty\';\n\n  function MyComponent() {\n    const showSuccess = () => {\n      toast.success("Success message", {\n        position: \'top\',\n        duration: 4000,\n      });\n    };\n'})}),"\n",(0,i.jsx)(n.h3,{id:"custom-components",children:"Custom Components"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"// Before\n<ToastProvider\n  renderToast={(toastOptions) => (\n    <CustomToast {...toastOptions} />\n  )}\n>\n\n// After\nimport { defineVariant } from 'rn-tosty';\n\nconst customVariant = defineVariant({\n  component: CustomToast, // Your custom component\n});\n\n<ToastProvider\n  theme=\"default\"\n  config={{\n    defaultVariant: customVariant\n  }}\n>\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h1,{id:"-configuration-migration",children:"\ud83d\udd27 Configuration Migration"}),"\n",(0,i.jsx)(n.h2,{id:"global-configuration",children:"Global Configuration"}),"\n",(0,i.jsx)(n.h3,{id:"most-libraries--rn-tosty",children:"Most Libraries \u2192 RN-Tosty"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"// Before (various approaches)\n// - react-native-toast-message: Toast config\n// - react-native-flash-message: FlashMessage props\n// - Others: Various global settings\n\n// After (RN-Tosty unified approach)\n<ToastProvider\n  theme=\"warmSunset\"\n  config={{\n    // Display settings\n    maxToasts: 3,\n    defaultDuration: 4000,\n    defaultPosition: 'top',\n\n    // Visual settings\n    progressBar: { enabled: true },\n\n    // Layout settings\n    verticalOffset: VerticalOffsetPresets.safe(),\n    layout: ToastLayoutPresets.balanced(),\n\n    // Queue management\n    queue: QueuePresets.default(),\n\n    // Accessibility\n    accessibility: { enabled: true },\n  }}\n>\n"})}),"\n",(0,i.jsx)(n.h2,{id:"theme-configuration",children:"Theme Configuration"}),"\n",(0,i.jsx)(n.h3,{id:"migrating-custom-styles",children:"Migrating Custom Styles"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"// Before (most libraries)\n// Custom styles were often scattered or limited\n\n// After (RN-Tosty comprehensive theming)\nimport { defineTheme } from 'rn-tosty';\n\nconst customTheme = defineTheme({\n  light: {\n    colors: {\n      // Map your old colors here\n      primary: '#your-brand-color',\n      success: '#your-success-color',\n      error: '#your-error-color',\n      // ... etc\n    },\n    typography: {\n      // Centralized typography settings\n    },\n    spacing: {\n      // Consistent spacing system\n    },\n    borderRadius: {\n      // Unified border radius values\n    }\n  },\n  dark: {\n    // Dark mode variants\n  }\n});\n\n<ToastProvider theme={customTheme}>\n"})}),"\n",(0,i.jsx)(n.h2,{id:"animation-migration",children:"Animation Migration"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"// Most libraries had limited animation control\n\n// RN-Tosty provides comprehensive animation control\n<ToastProvider\n  config={{\n    animations: {\n      entrance: 'slideFromTop',    // or custom animation\n      exit: 'slideToTop',\n      duration: 300,\n      easing: 'ease-out',\n    }\n  }}\n>\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h1,{id:"-testing--verification",children:"\ud83e\uddea Testing & Verification"}),"\n",(0,i.jsx)(n.h2,{id:"step-by-step-verification",children:"Step-by-Step Verification"}),"\n",(0,i.jsx)(n.h3,{id:"1-side-by-side-testing",children:"1. Side-by-Side Testing"}),"\n",(0,i.jsx)(n.p,{children:"Keep both libraries temporarily:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"// Temporarily test both\nimport OldToast from 'react-native-toast-message';\nimport { toast as newToast } from 'rn-tosty';\n\nconst testBothToasts = () => {\n  // Test old implementation\n  OldToast.show({\n    type: 'success',\n    text1: 'Old Toast',\n  });\n\n  // Test new implementation\n  newToast.success('New Toast');\n};\n"})}),"\n",(0,i.jsx)(n.h3,{id:"2-automated-migration-testing",children:"2. Automated Migration Testing"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"// Create a migration test component\nfunction MigrationTest() {\n  const testScenarios = [\n    { type: 'success', message: 'Success test' },\n    { type: 'error', message: 'Error test' },\n    { type: 'warning', message: 'Warning test' },\n    { type: 'info', message: 'Info test' },\n  ];\n\n  return (\n    <View>\n      {testScenarios.map((scenario, index) => (\n        <Button\n          key={index}\n          title={`Test ${scenario.type}`}\n          onPress={() => {\n            // Test your migrated implementation\n            toast[scenario.type](scenario.message);\n          }}\n        />\n      ))}\n    </View>\n  );\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"3-regression-checklist",children:"3. Regression Checklist"}),"\n",(0,i.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","All toast types work correctly"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Positioning matches previous behavior"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Duration settings are preserved"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Custom styling is maintained"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Accessibility features still work"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Performance is maintained or improved"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","No memory leaks from old library"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"4-performance-verification",children:"4. Performance Verification"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"// Test performance with multiple toasts\nconst stressTest = () => {\n  for (let i = 0; i < 10; i++) {\n    setTimeout(() => {\n      toast.info(`Performance test ${i + 1}`);\n    }, i * 100);\n  }\n};\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h1,{id:"\ufe0f-cleanup",children:"\ud83d\uddd1\ufe0f Cleanup"}),"\n",(0,i.jsx)(n.h2,{id:"remove-old-dependencies",children:"Remove Old Dependencies"}),"\n",(0,i.jsx)(n.p,{children:"After successful migration and testing:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Remove old toast library\nyarn remove react-native-toast-message\n# or whichever library you were using\n\n# Clean up any platform-specific configurations\n# Check ios/ and android/ folders for old configurations\n\n# Update imports in your codebase\n# Use your IDE's find-and-replace to update remaining imports\n"})}),"\n",(0,i.jsx)(n.h2,{id:"code-cleanup",children:"Code Cleanup"}),"\n",(0,i.jsx)(n.h3,{id:"remove-old-imports",children:"Remove Old Imports"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"// Remove these old imports\nimport Toast from 'react-native-toast-message';\nimport { showMessage } from 'react-native-flash-message';\nimport Toast from 'react-native-simple-toast';\n// etc.\n\n// Replace with\nimport { toast } from 'rn-tosty';\n"})}),"\n",(0,i.jsx)(n.h3,{id:"clean-up-old-configuration",children:"Clean Up Old Configuration"}),"\n",(0,i.jsx)(n.p,{children:"Remove old configuration files, custom components that are no longer needed, and legacy styling code."}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h1,{id:"-post-migration-enhancements",children:"\ud83d\ude80 Post-Migration Enhancements"}),"\n",(0,i.jsx)(n.h2,{id:"take-advantage-of-new-features",children:"Take Advantage of New Features"}),"\n",(0,i.jsx)(n.h3,{id:"1-advanced-queue-management",children:"1. Advanced Queue Management"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"// Now you can handle complex queuing scenarios\ntoast.error('Network error', { priority: 'urgent' });\ntoast.success('Background sync', { priority: 'low' });\n"})}),"\n",(0,i.jsx)(n.h3,{id:"2-smart-theming",children:"2. Smart Theming"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:'// Automatic dark/light mode with beautiful themes\n<ToastProvider\n  theme="oceanBreeze"\n  followSystemAppearance={true}\n>\n'})}),"\n",(0,i.jsx)(n.h3,{id:"3-enhanced-accessibility",children:"3. Enhanced Accessibility"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"// Built-in accessibility features\n<ToastProvider\n  config={{\n    accessibility: {\n      enabled: true,\n      announceMode: 'assertive',\n    }\n  }}\n>\n"})}),"\n",(0,i.jsx)(n.h3,{id:"4-progress-bars",children:"4. Progress Bars"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"// Visual timing indicators\ntoast.success('File uploaded', {\n  showProgress: true,\n  duration: 5000,\n});\n"})}),"\n",(0,i.jsx)(n.h3,{id:"5-promise-integration",children:"5. Promise Integration"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"// Elegant loading states\ntoast.promise(uploadFile(), {\n  loading: 'Uploading file...',\n  success: 'File uploaded successfully!',\n  error: 'Upload failed',\n});\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h1,{id:"-troubleshooting",children:"\u2753 Troubleshooting"}),"\n",(0,i.jsx)(n.h2,{id:"common-migration-issues",children:"Common Migration Issues"}),"\n",(0,i.jsx)(n.h3,{id:"issue-toasts-not-showing",children:"Issue: Toasts Not Showing"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:'// \u274c Forgot to add ToastProvider\nfunction App() {\n  return <YourApp />; // Missing provider\n}\n\n// \u2705 Correct setup\nfunction App() {\n  return (\n    <ToastProvider theme="default">\n      <YourApp />\n    </ToastProvider>\n  );\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"issue-styling-looks-different",children:"Issue: Styling Looks Different"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:'// \u274c Missing theme configuration\n<ToastProvider> // Uses default theme\n\n// \u2705 Configure theme to match your app\n<ToastProvider theme="warmSunset"> // or custom theme\n'})}),"\n",(0,i.jsx)(n.h3,{id:"issue-performance-problems",children:"Issue: Performance Problems"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"// \u274c Too many simultaneous toasts\n// RN-Tosty handles this automatically, but you can tune it\n\n// \u2705 Configure reasonable limits\n<ToastProvider\n  config={{\n    maxToasts: 3,\n    queue: QueuePresets.conservative(),\n  }}\n>\n"})}),"\n",(0,i.jsx)(n.h3,{id:"issue-accessibility-regression",children:"Issue: Accessibility Regression"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"// \u2705 Enable comprehensive accessibility\n<ToastProvider\n  config={{\n    accessibility: {\n      enabled: true,\n      announceMode: 'auto',\n      includeTypeInLabel: true,\n    }\n  }}\n>\n"})}),"\n",(0,i.jsx)(n.h2,{id:"getting-help",children:"Getting Help"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Documentation Issues"}),": Check our comprehensive guides"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Migration Problems"}),": Create an issue with your old/new code comparison"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Performance Issues"}),": Profile your app and share findings"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Feature Requests"}),": Let us know what's missing from your old library"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h1,{id:"-migration-checklist",children:"\u2705 Migration Checklist"}),"\n",(0,i.jsx)(n.p,{children:"Use this checklist to ensure complete migration:"}),"\n",(0,i.jsx)(n.h2,{id:"pre-migration",children:"Pre-Migration"}),"\n",(0,i.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Identify current toast library and usage patterns"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Document current customizations and configurations"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Create backup branch of current implementation"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Install RN-Tosty alongside current library"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"migration",children:"Migration"}),"\n",(0,i.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Replace provider setup"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Update all toast calls to new API"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Migrate custom styling to variants/themes"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Update configuration settings"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Test all toast types and scenarios"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"post-migration",children:"Post-Migration"}),"\n",(0,i.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Verify functionality matches previous behavior"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Test on multiple devices and screen sizes"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Check accessibility features"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Run performance tests"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Remove old library and clean up code"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Update documentation and team knowledge"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"enhancements-optional",children:"Enhancements (Optional)"}),"\n",(0,i.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Explore new themes and variants"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Implement queue management strategies"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Add progress bars and loading states"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Enhance accessibility features"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Optimize configuration for your app's needs"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"\ud83c\udf89 Congratulations!"})," You've successfully migrated to RN-Tosty and can now enjoy its advanced features, beautiful themes, and robust performance!"]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>r});var t=s(6540);const i={},o=t.createContext(i);function a(e){const n=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);