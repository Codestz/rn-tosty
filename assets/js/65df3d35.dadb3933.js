"use strict";(self.webpackChunkrn_tosty_docs=self.webpackChunkrn_tosty_docs||[]).push([[559],{1596:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"api/overview","title":"API Overview \ud83d\udd0c","description":"Complete reference for all RN-Tosty APIs, hooks, and utilities. This page provides a comprehensive overview of everything available in the library.","source":"@site/docs/api/overview.md","sourceDirName":"api","slug":"/api/overview","permalink":"/rn-tosty/docs/api/overview","draft":false,"unlisted":false,"editUrl":"https://github.com/codestz/rn-tosty/tree/main/docs/docs/api/overview.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Promise Integration \u26a1","permalink":"/rn-tosty/docs/advanced/promise-integration"}}');var o=s(4848),a=s(8453);const i={},r="API Overview \ud83d\udd0c",c={},l=[{value:"\ud83d\udcda Quick Reference",id:"-quick-reference",level:2},{value:"\ud83c\udf5e Core Toast API",id:"-core-toast-api",level:2},{value:"<code>toast</code> - Main API",id:"toast---main-api",level:3},{value:"<code>toast()</code> - Generic Toast",id:"toast---generic-toast",level:3},{value:"<code>toast.success()</code> - Success Notifications",id:"toastsuccess---success-notifications",level:3},{value:"<code>toast.error()</code> - Error Messages",id:"toasterror---error-messages",level:3},{value:"<code>toast.warning()</code> - Warning Messages",id:"toastwarning---warning-messages",level:3},{value:"<code>toast.info()</code> - Information Messages",id:"toastinfo---information-messages",level:3},{value:"<code>toast.loading()</code> - Loading States",id:"toastloading---loading-states",level:3},{value:"<code>toast.promise()</code> - Promise Integration",id:"toastpromise---promise-integration",level:3},{value:"<code>toast.dismiss()</code> - Control Toast Visibility",id:"toastdismiss---control-toast-visibility",level:3},{value:"<code>toast.update()</code> - Update Existing Toast",id:"toastupdate---update-existing-toast",level:3},{value:"\ud83c\udf9b\ufe0f ToastProvider",id:"\ufe0f-toastprovider",level:2},{value:"Basic Setup",id:"basic-setup",level:3},{value:"Configuration Object",id:"configuration-object",level:3},{value:"\ud83e\ude9d Hooks",id:"-hooks",level:2},{value:"<code>useToast()</code> - Toast Control Hook",id:"usetoast---toast-control-hook",level:3},{value:"<code>useTheme()</code> - Theme Control Hook",id:"usetheme---theme-control-hook",level:3},{value:"<code>useToastConfig()</code> - Configuration Hook",id:"usetoastconfig---configuration-hook",level:3},{value:"<code>useToastAnimation()</code> - Animation Control",id:"usetoastanimation---animation-control",level:3},{value:"<code>useToastQueue()</code> - Queue Management",id:"usetoastqueue---queue-management",level:3},{value:"\ud83c\udfa8 Theming API",id:"-theming-api",level:2},{value:"Built-in Themes",id:"built-in-themes",level:3},{value:"<code>defineTheme()</code> - Custom Theme Creation",id:"definetheme---custom-theme-creation",level:3},{value:"<code>useThemeContext()</code> - Access Theme Values",id:"usethemecontext---access-theme-values",level:3},{value:"\ud83c\udfad Variants API",id:"-variants-api",level:2},{value:"<code>defineVariant()</code> - Custom Styling",id:"definevariant---custom-styling",level:3},{value:"Built-in Variants",id:"built-in-variants",level:3},{value:"\u2699\ufe0f Presets API",id:"\ufe0f-presets-api",level:2},{value:"Queue Presets",id:"queue-presets",level:3},{value:"Icon Presets",id:"icon-presets",level:3},{value:"Layout Presets",id:"layout-presets",level:3},{value:"Vertical Offset Presets",id:"vertical-offset-presets",level:3},{value:"Progress Bar Presets",id:"progress-bar-presets",level:3},{value:"\ud83d\udd27 Utilities API",id:"-utilities-api",level:2},{value:"<code>ToastManager</code> - Advanced Control",id:"toastmanager---advanced-control",level:3},{value:"<code>VariantManager</code> - Variant Control",id:"variantmanager---variant-control",level:3},{value:"<code>ThemeRegistry</code> - Theme Management",id:"themeregistry---theme-management",level:3},{value:"\ud83d\udcca Type Definitions",id:"-type-definitions",level:2},{value:"Core Types",id:"core-types",level:3},{value:"\ud83d\udd0d Advanced Usage Examples",id:"-advanced-usage-examples",level:2},{value:"Custom Toast Component",id:"custom-toast-component",level:3},{value:"Promise-based Loading",id:"promise-based-loading",level:3},{value:"Dynamic Configuration",id:"dynamic-configuration",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"api-overview-",children:"API Overview \ud83d\udd0c"})}),"\n",(0,o.jsx)(n.p,{children:"Complete reference for all RN-Tosty APIs, hooks, and utilities. This page provides a comprehensive overview of everything available in the library."}),"\n",(0,o.jsx)(n.h2,{id:"-quick-reference",children:"\ud83d\udcda Quick Reference"}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Category"}),(0,o.jsx)(n.th,{children:"Import"}),(0,o.jsx)(n.th,{children:"Description"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"Core API"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"import { toast } from 'rn-tosty'"})}),(0,o.jsx)(n.td,{children:"Main toast methods"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"Provider"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"import { ToastProvider } from 'rn-tosty'"})}),(0,o.jsx)(n.td,{children:"App-level configuration"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"Hooks"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"import { useToast, useTheme } from 'rn-tosty'"})}),(0,o.jsx)(n.td,{children:"React hooks"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"Theming"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"import { Themes, defineTheme } from 'rn-tosty'"})}),(0,o.jsx)(n.td,{children:"Theme system"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"Variants"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"import { defineVariant, Variants } from 'rn-tosty'"})}),(0,o.jsx)(n.td,{children:"Custom styling"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"Presets"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"import { QueuePresets, IconPresets } from 'rn-tosty'"})}),(0,o.jsx)(n.td,{children:"Pre-configured options"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"Utilities"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"import { ToastManager } from 'rn-tosty'"})}),(0,o.jsx)(n.td,{children:"Advanced control"})]})]})]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"-core-toast-api",children:"\ud83c\udf5e Core Toast API"}),"\n",(0,o.jsxs)(n.h3,{id:"toast---main-api",children:[(0,o.jsx)(n.code,{children:"toast"})," - Main API"]}),"\n",(0,o.jsx)(n.p,{children:"The primary way to show toast notifications."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"import { toast } from 'rn-tosty';\n\n// Basic usage\ntoast(message: string, options?: ToastOptions): string\ntoast.success(message: string, options?: ToastOptions): string\ntoast.error(message: string, options?: ToastOptions): string\ntoast.warning(message: string, options?: ToastOptions): string\ntoast.info(message: string, options?: ToastOptions): string\n"})}),"\n",(0,o.jsxs)(n.h3,{id:"toast---generic-toast",children:[(0,o.jsx)(n.code,{children:"toast()"})," - Generic Toast"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"// Basic toast\ntoast('Hello world!');\n\n// With options\ntoast('Custom toast', {\n  duration: 3000,\n  position: 'bottom',\n  variant: 'custom',\n  priority: 'high',\n});\n"})}),"\n",(0,o.jsxs)(n.h3,{id:"toastsuccess---success-notifications",children:[(0,o.jsx)(n.code,{children:"toast.success()"})," - Success Notifications"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"// Simple success\ntoast.success('Operation completed!');\n\n// With custom duration\ntoast.success('File saved successfully', { duration: 2000 });\n\n// With custom styling\ntoast.success('Profile updated!', {\n  variant: 'celebration',\n  showProgress: true,\n});\n"})}),"\n",(0,o.jsxs)(n.h3,{id:"toasterror---error-messages",children:[(0,o.jsx)(n.code,{children:"toast.error()"})," - Error Messages"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"// Simple error\ntoast.error('Something went wrong!');\n\n// Persistent error (stays until dismissed)\ntoast.error('Network connection failed', { duration: 0 });\n\n// High priority error\ntoast.error('Critical system error', {\n  priority: 'urgent',\n  variant: 'critical',\n});\n"})}),"\n",(0,o.jsxs)(n.h3,{id:"toastwarning---warning-messages",children:[(0,o.jsx)(n.code,{children:"toast.warning()"})," - Warning Messages"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"// Simple warning\ntoast.warning('Please check your input');\n\n// Form validation warning\ntoast.warning('Email format is invalid', {\n  duration: 6000,\n  position: 'bottom',\n});\n"})}),"\n",(0,o.jsxs)(n.h3,{id:"toastinfo---information-messages",children:[(0,o.jsx)(n.code,{children:"toast.info()"})," - Information Messages"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"// Simple info\ntoast.info('New update available');\n\n// With custom icon\ntoast.info('Sync completed', {\n  icon: SyncIcon,\n  duration: 3000,\n});\n"})}),"\n",(0,o.jsxs)(n.h3,{id:"toastloading---loading-states",children:[(0,o.jsx)(n.code,{children:"toast.loading()"})," - Loading States"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"// Simple loading\nconst loadingId = toast.loading('Processing...');\n\n// Update loading toast\ntoast.success('Processing complete!', { id: loadingId });\n\n// Dismiss loading toast\ntoast.dismiss(loadingId);\n"})}),"\n",(0,o.jsxs)(n.h3,{id:"toastpromise---promise-integration",children:[(0,o.jsx)(n.code,{children:"toast.promise()"})," - Promise Integration"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"// Automatic loading, success, error handling\ntoast.promise(fetchUserData(), {\n  loading: 'Loading user data...',\n  success: 'User data loaded!',\n  error: 'Failed to load user data',\n});\n\n// With custom options\ntoast.promise(\n  uploadFile(),\n  {\n    loading: { message: 'Uploading...', showProgress: true },\n    success: (data) => `File ${data.filename} uploaded!`,\n    error: (err) => `Upload failed: ${err.message}`,\n  },\n  {\n    duration: 5000,\n    position: 'bottom',\n  }\n);\n"})}),"\n",(0,o.jsxs)(n.h3,{id:"toastdismiss---control-toast-visibility",children:[(0,o.jsx)(n.code,{children:"toast.dismiss()"})," - Control Toast Visibility"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"// Dismiss specific toast\nconst toastId = toast.success('Auto-dismiss in 5 seconds');\nsetTimeout(() => toast.dismiss(toastId), 2000);\n\n// Dismiss all toasts\ntoast.dismiss();\n\n// Dismiss by type\ntoast.dismiss('success'); // Dismiss all success toasts\ntoast.dismiss(['error', 'warning']); // Dismiss multiple types\n"})}),"\n",(0,o.jsxs)(n.h3,{id:"toastupdate---update-existing-toast",children:[(0,o.jsx)(n.code,{children:"toast.update()"})," - Update Existing Toast"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"// Update toast message\nconst id = toast.loading('Step 1 of 3...');\ntoast.update(id, { message: 'Step 2 of 3...' });\ntoast.update(id, { message: 'Step 3 of 3...' });\ntoast.success('All steps completed!', { id });\n\n// Update toast type\nconst loadingId = toast.loading('Saving...');\ntoast.update(loadingId, {\n  type: 'success',\n  message: 'Saved successfully!',\n});\n"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"\ufe0f-toastprovider",children:"\ud83c\udf9b\ufe0f ToastProvider"}),"\n",(0,o.jsx)(n.h3,{id:"basic-setup",children:"Basic Setup"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:'import { ToastProvider } from \'rn-tosty\';\n\n<ToastProvider\n  theme="default" // Theme selection\n  initialMode="auto" // Light/dark mode\n  followSystemAppearance={true} // Auto theme switching\n  config={configObject} // Global configuration\n>\n  <App />\n</ToastProvider>;\n'})}),"\n",(0,o.jsx)(n.h3,{id:"configuration-object",children:"Configuration Object"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"interface ToastConfig {\n  // Display settings\n  maxToasts?: number; // Max simultaneous toasts (default: 3)\n  defaultDuration?: number; // Default duration in ms (default: 4000)\n  defaultPosition?: 'top' | 'bottom'; // Default position (default: 'top')\n  defaultVariant?: string; // Default variant name\n\n  // Queue management\n  queue?: QueueConfig; // Queue behavior configuration\n\n  // Visual settings\n  progressBar?: ProgressBarConfig; // Progress bar settings\n  icons?: IconConfig; // Icon configuration\n\n  // Layout settings\n  layout?: LayoutConfig; // Toast layout configuration\n  verticalOffset?: VerticalOffsetConfig; // Spacing configuration\n\n  // Accessibility\n  accessibility?: AccessibilityConfig; // A11y settings\n\n  // Advanced\n  debug?: boolean; // Enable debug logging\n  animations?: AnimationConfig; // Animation settings\n}\n"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"-hooks",children:"\ud83e\ude9d Hooks"}),"\n",(0,o.jsxs)(n.h3,{id:"usetoast---toast-control-hook",children:[(0,o.jsx)(n.code,{children:"useToast()"})," - Toast Control Hook"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"import { useToast } from 'rn-tosty';\n\nfunction MyComponent() {\n  const {\n    show, // Function to show toast\n    dismiss, // Function to dismiss toast\n    dismissAll, // Function to dismiss all toasts\n    update, // Function to update toast\n    toasts, // Array of current toasts\n    isVisible, // Boolean: are any toasts visible\n    count, // Number of visible toasts\n  } = useToast();\n\n  return <Button title=\"Show Toast\" onPress={() => show('Hello from hook!')} />;\n}\n"})}),"\n",(0,o.jsxs)(n.h3,{id:"usetheme---theme-control-hook",children:[(0,o.jsx)(n.code,{children:"useTheme()"})," - Theme Control Hook"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"import { useTheme } from 'rn-tosty';\n\nfunction ThemeControls() {\n  const {\n    theme, // Current theme object\n    themeName, // Current theme name\n    mode, // Current mode ('light' | 'dark')\n    isDark, // Boolean: is dark mode active\n    setTheme, // Function to change theme\n    setMode, // Function to change mode\n    toggle, // Function to toggle light/dark\n    followSystem, // Boolean: following system appearance\n    setFollowSystem, // Function to toggle system following\n  } = useTheme();\n\n  return (\n    <View>\n      <Text>Current theme: {themeName}</Text>\n      <Text>Current mode: {mode}</Text>\n      <Button title=\"Toggle Mode\" onPress={toggle} />\n      <Button title=\"Ocean Theme\" onPress={() => setTheme('oceanBreeze')} />\n    </View>\n  );\n}\n"})}),"\n",(0,o.jsxs)(n.h3,{id:"usetoastconfig---configuration-hook",children:[(0,o.jsx)(n.code,{children:"useToastConfig()"})," - Configuration Hook"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"import { useToastConfig } from 'rn-tosty';\n\nfunction ConfigControls() {\n  const {\n    config, // Current configuration\n    updateConfig, // Function to update configuration\n    resetConfig, // Function to reset to defaults\n  } = useToastConfig();\n\n  const handleMaxToastsChange = (maxToasts: number) => {\n    updateConfig({ maxToasts });\n  };\n\n  return (\n    <Slider\n      value={config.maxToasts}\n      onValueChange={handleMaxToastsChange}\n      minimumValue={1}\n      maximumValue={5}\n    />\n  );\n}\n"})}),"\n",(0,o.jsxs)(n.h3,{id:"usetoastanimation---animation-control",children:[(0,o.jsx)(n.code,{children:"useToastAnimation()"})," - Animation Control"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"import { useToastAnimation } from 'rn-tosty';\n\nfunction AnimatedComponent({ toastId }: { toastId: string }) {\n  const {\n    opacity, // Animated opacity value\n    translateY, // Animated translation value\n    scale, // Animated scale value\n    isAnimating, // Boolean: is animation running\n    startAnimation, // Function to start animation\n    stopAnimation, // Function to stop animation\n  } = useToastAnimation(toastId);\n\n  return (\n    <Animated.View\n      style={{\n        opacity,\n        transform: [{ translateY }, { scale }],\n      }}\n    >\n      {/* Toast content */}\n    </Animated.View>\n  );\n}\n"})}),"\n",(0,o.jsxs)(n.h3,{id:"usetoastqueue---queue-management",children:[(0,o.jsx)(n.code,{children:"useToastQueue()"})," - Queue Management"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"import { useToastQueue } from 'rn-tosty';\n\nfunction QueueStatus() {\n  const {\n    queue, // Current queue\n    queueSize, // Number of queued toasts\n    isProcessing, // Boolean: is queue processing\n    clearQueue, // Function to clear queue\n    pauseQueue, // Function to pause processing\n    resumeQueue, // Function to resume processing\n  } = useToastQueue();\n\n  return (\n    <View>\n      <Text>Queue size: {queueSize}</Text>\n      <Text>Processing: {isProcessing ? 'Yes' : 'No'}</Text>\n      <Button title=\"Clear Queue\" onPress={clearQueue} />\n    </View>\n  );\n}\n"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"-theming-api",children:"\ud83c\udfa8 Theming API"}),"\n",(0,o.jsx)(n.h3,{id:"built-in-themes",children:"Built-in Themes"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"import { Themes } from 'rn-tosty';\n\n// Available themes\nThemes.default        // Professional, clean\nThemes.warmSunset     // Cozy, welcoming\nThemes.oceanBreeze    // Calm, peaceful\nThemes.forestGlow     // Natural, grounded\n\n// Usage\n<ToastProvider theme={Themes.oceanBreeze}>\n"})}),"\n",(0,o.jsxs)(n.h3,{id:"definetheme---custom-theme-creation",children:[(0,o.jsx)(n.code,{children:"defineTheme()"})," - Custom Theme Creation"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"import { defineTheme } from 'rn-tosty';\n\nconst customTheme = defineTheme({\n  name: 'myCustomTheme',\n  light: {\n    colors: {\n      primary: '#FF6B35',\n      success: '#4ECDC4',\n      error: '#E74C3C',\n      warning: '#F39C12',\n      info: '#3498DB',\n      surface: '#FFFFFF',\n      onSurface: '#2C3E50',\n      border: '#BDC3C7',\n      background: '#F8F9FA',\n    },\n    typography: {\n      title: { size: 16, weight: '600' },\n      message: { size: 14, weight: '400' },\n    },\n    spacing: {\n      xs: 4,\n      sm: 8,\n      md: 12,\n      lg: 16,\n      xl: 20,\n      container: 16,\n    },\n    borderRadius: {\n      sm: 4,\n      md: 8,\n      lg: 12,\n    },\n    shadows: {\n      light: { /* shadow config */ },\n      medium: { /* shadow config */ },\n    }\n  },\n  dark: {\n    // Dark mode overrides\n    colors: {\n      surface: '#2C3E50',\n      onSurface: '#FFFFFF',\n      background: '#1A1A1A',\n      // ... other dark mode colors\n    }\n  }\n});\n\n<ToastProvider theme={customTheme}>\n"})}),"\n",(0,o.jsxs)(n.h3,{id:"usethemecontext---access-theme-values",children:[(0,o.jsx)(n.code,{children:"useThemeContext()"})," - Access Theme Values"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"import { useThemeContext } from 'rn-tosty';\n\nfunction ThemedComponent() {\n  const theme = useThemeContext();\n\n  return (\n    <View\n      style={{\n        backgroundColor: theme.colors.surface,\n        padding: theme.spacing.container,\n        borderRadius: theme.borderRadius.md,\n        ...theme.shadows.light,\n      }}\n    >\n      <Text\n        style={{\n          color: theme.colors.onSurface,\n          fontSize: theme.typography.title.size,\n          fontWeight: theme.typography.title.weight,\n        }}\n      >\n        Themed Content\n      </Text>\n    </View>\n  );\n}\n"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"-variants-api",children:"\ud83c\udfad Variants API"}),"\n",(0,o.jsxs)(n.h3,{id:"definevariant---custom-styling",children:[(0,o.jsx)(n.code,{children:"defineVariant()"})," - Custom Styling"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"import { defineVariant } from 'rn-tosty';\n\nconst celebrationVariant = defineVariant({\n  name: 'celebration',\n  style: {\n    backgroundColor: '#FFD700',\n    borderWidth: 2,\n    borderColor: '#FFA500',\n    borderRadius: 20,\n  },\n  text: {\n    color: '#8B4513',\n    fontWeight: '700',\n    fontSize: 16,\n  },\n  icon: {\n    component: CelebrationIcon,\n    size: 24,\n    color: '#FF6347',\n    animated: true,\n  },\n  progressBar: {\n    color: '#FF6347',\n    height: 4,\n  },\n  animation: {\n    entrance: 'bounceIn',\n    exit: 'bounceOut',\n    duration: 400,\n  },\n});\n\n// Usage\ntoast.success('Celebration!', { variant: celebrationVariant });\n"})}),"\n",(0,o.jsx)(n.h3,{id:"built-in-variants",children:"Built-in Variants"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"import { Variants } from 'rn-tosty';\n\n// Available variants\nVariants.default; // Standard appearance\nVariants.minimal; // Reduced styling\nVariants.bold; // Enhanced emphasis\nVariants.subtle; // Understated appearance\nVariants.floating; // Elevated appearance\nVariants.compact; // Reduced spacing\n\n// Usage\ntoast.success('Message', { variant: Variants.bold });\n"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"\ufe0f-presets-api",children:"\u2699\ufe0f Presets API"}),"\n",(0,o.jsx)(n.h3,{id:"queue-presets",children:"Queue Presets"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"import { QueuePresets } from 'rn-tosty';\n\nQueuePresets.default()        // Balanced queue management\nQueuePresets.conservative()   // Fewer toasts, less overwhelming\nQueuePresets.aggressive()     // More toasts, faster display\nQueuePresets.simple()         // Basic FIFO queue\nQueuePresets.immediate()      // No queuing, immediate display\n\n// Usage\n<ToastProvider config={{ queue: QueuePresets.conservative() }}>\n"})}),"\n",(0,o.jsx)(n.h3,{id:"icon-presets",children:"Icon Presets"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"import { IconPresets } from 'rn-tosty';\n\nIconPresets.default()     // Medium size, animated\nIconPresets.large()       // Large icons\nIconPresets.minimal()     // Small, static icons\nIconPresets.static()      // No animations\nIconPresets.custom(config) // Custom configuration\n\n// Usage\n<ToastProvider config={{ icons: IconPresets.large() }}>\n"})}),"\n",(0,o.jsx)(n.h3,{id:"layout-presets",children:"Layout Presets"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"import { ToastLayoutPresets } from 'rn-tosty';\n\nToastLayoutPresets.balanced()      // Default balanced layout\nToastLayoutPresets.centered()      // Center-aligned content\nToastLayoutPresets.minimal()       // Compact spacing\nToastLayoutPresets.spacious()      // Extra breathing room\nToastLayoutPresets.rightAligned()  // Right-aligned content\n\n// Usage\n<ToastProvider config={{ layout: ToastLayoutPresets.spacious() }}>\n"})}),"\n",(0,o.jsx)(n.h3,{id:"vertical-offset-presets",children:"Vertical Offset Presets"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"import { VerticalOffsetPresets } from 'rn-tosty';\n\nVerticalOffsetPresets.safe()        // Auto device adaptation\nVerticalOffsetPresets.spacious()    // Extra margins\nVerticalOffsetPresets.compact()     // Minimal margins\nVerticalOffsetPresets.avoidTop(px)  // Avoid top elements\nVerticalOffsetPresets.avoidBottom(px) // Avoid bottom elements\n\n// Usage\n<ToastProvider config={{ verticalOffset: VerticalOffsetPresets.safe() }}>\n"})}),"\n",(0,o.jsx)(n.h3,{id:"progress-bar-presets",children:"Progress Bar Presets"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"import { ProgressBarPresets } from 'rn-tosty';\n\nProgressBarPresets.default()   // Standard progress bars\nProgressBarPresets.thick()     // Thicker bars\nProgressBarPresets.thin()      // Thinner bars\nProgressBarPresets.smooth()    // Smooth animations\nProgressBarPresets.fast()      // Quick animations\nProgressBarPresets.minimal()   // Subtle appearance\n\n// Usage\n<ToastProvider config={{ progressBar: ProgressBarPresets.thick() }}>\n"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"-utilities-api",children:"\ud83d\udd27 Utilities API"}),"\n",(0,o.jsxs)(n.h3,{id:"toastmanager---advanced-control",children:[(0,o.jsx)(n.code,{children:"ToastManager"})," - Advanced Control"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"import { ToastManager } from 'rn-tosty';\n\n// Direct manager access\nconst manager = ToastManager.getInstance();\n\n// Advanced methods\nmanager.showToast(config); // Show with full config object\nmanager.dismissToast(id); // Dismiss specific toast\nmanager.dismissAllToasts(); // Dismiss all toasts\nmanager.updateToast(id, updates); // Update existing toast\nmanager.getToast(id); // Get toast by ID\nmanager.getAllToasts(); // Get all current toasts\nmanager.clearQueue(); // Clear waiting queue\nmanager.pauseQueue(); // Pause queue processing\nmanager.resumeQueue(); // Resume queue processing\n"})}),"\n",(0,o.jsxs)(n.h3,{id:"variantmanager---variant-control",children:[(0,o.jsx)(n.code,{children:"VariantManager"})," - Variant Control"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"import { VariantManager } from 'rn-tosty';\n\nconst variantManager = VariantManager.getInstance();\n\n// Variant management\nvariantManager.registerVariant(name, config); // Register new variant\nvariantManager.getVariant(name); // Get variant config\nvariantManager.getAllVariants(); // Get all variants\nvariantManager.removeVariant(name); // Remove variant\n"})}),"\n",(0,o.jsxs)(n.h3,{id:"themeregistry---theme-management",children:[(0,o.jsx)(n.code,{children:"ThemeRegistry"})," - Theme Management"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"import { ThemeRegistry } from 'rn-tosty';\n\nconst registry = ThemeRegistry.getInstance();\n\n// Theme management\nregistry.registerTheme(name, theme); // Register custom theme\nregistry.getTheme(name); // Get theme by name\nregistry.getAllThemes(); // Get all themes\nregistry.setActiveTheme(name); // Set active theme\nregistry.getActiveTheme(); // Get current theme\n"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"-type-definitions",children:"\ud83d\udcca Type Definitions"}),"\n",(0,o.jsx)(n.h3,{id:"core-types",children:"Core Types"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"// Toast configuration\ninterface ToastOptions {\n  id?: string;\n  duration?: number;\n  position?: 'top' | 'bottom';\n  variant?: string | VariantConfig;\n  priority?: 'low' | 'medium' | 'high' | 'urgent';\n  showProgress?: boolean;\n  onPress?: () => void;\n  onDismiss?: () => void;\n  icon?: React.ComponentType | IconConfig;\n  accessibility?: AccessibilityOptions;\n}\n\n// Theme definition\ninterface Theme {\n  name: string;\n  light: ThemeMode;\n  dark: ThemeMode;\n}\n\ninterface ThemeMode {\n  colors: ColorScheme;\n  typography: Typography;\n  spacing: Spacing;\n  borderRadius: BorderRadius;\n  shadows: Shadows;\n}\n\n// Variant definition\ninterface VariantConfig {\n  name?: string;\n  style?: ViewStyle;\n  text?: TextStyle;\n  icon?: IconConfig;\n  progressBar?: ProgressBarConfig;\n  animation?: AnimationConfig;\n  component?: React.ComponentType;\n}\n"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"-advanced-usage-examples",children:"\ud83d\udd0d Advanced Usage Examples"}),"\n",(0,o.jsx)(n.h3,{id:"custom-toast-component",children:"Custom Toast Component"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"import { defineVariant, useThemeContext } from 'rn-tosty';\n\nconst CustomToastComponent = ({ message, onDismiss, type }) => {\n  const theme = useThemeContext();\n\n  return (\n    <View style={[styles.container, { backgroundColor: theme.colors.surface }]}>\n      <Text style={[styles.message, { color: theme.colors.onSurface }]}>\n        {message}\n      </Text>\n      <TouchableOpacity onPress={onDismiss}>\n        <Text style={styles.dismissButton}>\xd7</Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nconst customVariant = defineVariant({\n  component: CustomToastComponent,\n});\n\ntoast('Custom toast!', { variant: customVariant });\n"})}),"\n",(0,o.jsx)(n.h3,{id:"promise-based-loading",children:"Promise-based Loading"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"const handleAsyncOperation = async () => {\n  const result = await toast.promise(\n    performAsyncTask(),\n    {\n      loading: 'Processing your request...',\n      success: (data) => `Successfully processed ${data.count} items`,\n      error: (err) => `Failed: ${err.message}`,\n    },\n    {\n      duration: 5000,\n      showProgress: true,\n      priority: 'high',\n    }\n  );\n\n  console.log('Operation result:', result);\n};\n"})}),"\n",(0,o.jsx)(n.h3,{id:"dynamic-configuration",children:"Dynamic Configuration"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"const DynamicToastDemo = () => {\n  const { updateConfig } = useToastConfig();\n  const { setTheme } = useTheme();\n\n  useEffect(() => {\n    // Update configuration based on user preferences\n    const userPrefs = getUserPreferences();\n\n    updateConfig({\n      maxToasts: userPrefs.maxNotifications,\n      defaultDuration: userPrefs.notificationDuration,\n      progressBar: { enabled: userPrefs.showProgress },\n    });\n\n    setTheme(userPrefs.theme);\n  }, []);\n\n  return <YourApp />;\n};\n"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"\ud83d\udd0c This API reference covers all available functionality"})," - from basic toast methods to advanced theming and customization options. Use this as your go-to reference for implementing any toast-related functionality in your app!"]})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>r});var t=s(6540);const o={},a=t.createContext(o);function i(e){const n=t.useContext(a);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);